#!/bin/bash

main() {
    echo "apt update"
    sudo apt update

    # Directory (on path) for self installed binaries
    sudo mkdir -p /opt/bin/

    install_general_packages
    install_ide
    install_dev_packages

    echo switching shell to zsh
    chsh -s $(which zsh)

    DIR=$(git rev-parse --show-toplevel)
    "$DIR"/scripts/create-sym-links.sh
}

install_general_packages() {
    ## Standard utility packages for every machine
    local GENERAL_PACKAGE_LIST=(
        git 
        vim
        nala
        curl
        wget
        network-manager
        zsh
        alacritty
    )

    sudo add-apt-repository ppa:aslatter/ppa -y # Repo for alacritty
    for PACKAGE in ${GENERAL_PACKAGE_LIST[@]}; do
        echo ================================================================================
        echo "Installing $PACKAGE"
        sudo apt install -y "$PACKAGE"	
    done

}


install_ide() {
    while true; do
        read -p "install neovim? (yn): " RESP
        case $RESP in 
            [Yy]* ) 
                install_neovim
                break;;
            [Nn]* )
                break;;
            * )
                echo "yes or no"
        esac
    done

    while true; do
        read -p "install vs-code? (yn): " RESP
        case $RESP in 
            [Yy]* ) 
                sudo snap install code
                break;;
            [Nn]* )
                break;;
            * )
                echo "yes or no"
        esac
    done
}

install_neovim() {
    sudo mkdir -p /opt/nvim/

    pushd /opt/nvim 
    sudo wget https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
    sudo chmod +x nvim.appimage
    sudo ln -s /opt/nvim/nvim.appimage /opt/bin/nvim
    popd

    mkdir "$HOME"/.config/nvim
    pushd "$HOME"/.config/nvim
    git clone git@github.com:NvChad/NvChad.git
    popd
}

install_dev_packages() {
    ## Install C/C++ dev tools
    while true; do
        read -p "Do you want to install C/C++ dev tools? (yn): " RESP
        case $RESP in 
            [Yy]* ) 
                sudo nala install -y build-essential cmake clang
                break;;
            [Nn]* )
                break;;
            * )
                echo "yes or no"
        esac
    done

    ## Install Rust dev tools
    while true; do
        read -p "Do you want to install Rust dev tools? (yn): " RESP
        case $RESP in 
            [Yy]* ) 
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
                rustup toolchain install stable
                break;;
            [Nn]* )
                break;;
            * )
                echo "yes or no"
        esac
    done

    ## Install Flutter dev tools
    while true; do
        read -p "Do you want to install FLutter dev tools? (yn): " RESP
        case $RESP in 
            [Yy]* ) 
                sudo snap install flutter --classic && flutter doctor
                break;;
            [Nn]* )
                break;;
            * )
                echo "yes or no"
        esac
    done
}

main
